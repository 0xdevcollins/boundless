name: Build and Deploy to Vercel
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust and Stellar
        uses: ./.github/actions/setup-rust-stellar

      - name: Setup Node.js
        uses: ./.github/actions/setup-node

      - name: Build contracts
        run: make build

      - name: Install dependencies and upgrade contract
        env:
          STELLAR_NETWORK: testnet
          STELLAR_ACCOUNT: ${{ secrets.STELLAR_ACCOUNT }}
          STELLAR_SECRET_KEY: ${{ secrets.STELLAR_SECRET_KEY }}
          SOROBAN_SECRET_KEY: ${{ secrets.SOROBAN_SECRET_KEY }}
          PUBLIC_STELLAR_NETWORK_PASSPHRASE: Test SDF Network ; September 2015
          PUBLIC_STELLAR_RPC_URL: https://soroban-testnet.stellar.org/
        run: |
          npm ci
          npm run init

      - name: Build Next.js app
        env:
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DATABASE_URL_UNPOOLED: ${{ secrets.DATABASE_URL_UNPOOLED }}
          PGHOST: ${{ secrets.PGHOST }}
          PGUSER: ${{ secrets.PGUSER }}
          PGDATABASE: ${{ secrets.PGDATABASE }}
          PGPASSWORD: ${{ secrets.PGPASSWORD }}
          POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GITHUB_ID: ${{ secrets.GH_ID }}
          GITHUB_SECRET: ${{ secrets.GH_SECRET }}
          PUBLIC_SOROBAN_NETWORK_PASSPHRASE: Test SDF Network ; September 2015
          PUBLIC_SOROBAN_RPC_URL: https://soroban-testnet.stellar.org/
        run: |
          npm run build

      - name: Deploy to Vercel
        run: npx vercel --token ${{ secrets.VERCEL_TOKEN }} --prod --yes
